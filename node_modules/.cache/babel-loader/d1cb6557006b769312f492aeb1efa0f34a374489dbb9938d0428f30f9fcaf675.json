{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport CaretDownFilled from \"@ant-design/icons/es/icons/CaretDownFilled\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport MinusSquareOutlined from \"@ant-design/icons/es/icons/MinusSquareOutlined\";\nimport PlusSquareOutlined from \"@ant-design/icons/es/icons/PlusSquareOutlined\";\nimport classNames from 'classnames';\nimport { cloneElement } from '../../_util/reactNode';\nconst SwitcherIconCom = props => {\n  const {\n    prefixCls,\n    switcherIcon,\n    treeNodeProps,\n    showLine\n  } = props;\n  const {\n    isLeaf,\n    expanded,\n    loading\n  } = treeNodeProps;\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-loading-icon\")\n    });\n  }\n  let showLeafIcon;\n  if (showLine && typeof showLine === 'object') {\n    showLeafIcon = showLine.showLeafIcon;\n  }\n  if (isLeaf) {\n    if (!showLine) {\n      return null;\n    }\n    if (typeof showLeafIcon !== 'boolean' && !!showLeafIcon) {\n      const leafIcon = typeof showLeafIcon === 'function' ? showLeafIcon(treeNodeProps) : showLeafIcon;\n      const leafCls = \"\".concat(prefixCls, \"-switcher-line-custom-icon\");\n      if ( /*#__PURE__*/React.isValidElement(leafIcon)) {\n        return cloneElement(leafIcon, {\n          className: classNames(leafIcon.props.className || '', leafCls)\n        });\n      }\n      return leafIcon;\n    }\n    return showLeafIcon ? ( /*#__PURE__*/React.createElement(FileOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    })) : ( /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-switcher-leaf-line\")\n    }));\n  }\n  const switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n  const switcher = typeof switcherIcon === 'function' ? switcherIcon(treeNodeProps) : switcherIcon;\n  if ( /*#__PURE__*/React.isValidElement(switcher)) {\n    return cloneElement(switcher, {\n      className: classNames(switcher.props.className || '', switcherCls)\n    });\n  }\n  if (switcher !== undefined) {\n    return switcher;\n  }\n  if (showLine) {\n    return expanded ? ( /*#__PURE__*/React.createElement(MinusSquareOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    })) : ( /*#__PURE__*/React.createElement(PlusSquareOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    }));\n  }\n  return /*#__PURE__*/React.createElement(CaretDownFilled, {\n    className: switcherCls\n  });\n};\nexport default SwitcherIconCom;","map":{"version":3,"names":["React","CaretDownFilled","FileOutlined","LoadingOutlined","MinusSquareOutlined","PlusSquareOutlined","classNames","cloneElement","SwitcherIconCom","props","prefixCls","switcherIcon","treeNodeProps","showLine","isLeaf","expanded","loading","createElement","className","concat","showLeafIcon","leafIcon","leafCls","isValidElement","switcherCls","switcher","undefined"],"sources":["/home/abhijeet/WorkSpace/sis-web/node_modules/antd/es/tree/utils/iconUtil.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport CaretDownFilled from \"@ant-design/icons/es/icons/CaretDownFilled\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport MinusSquareOutlined from \"@ant-design/icons/es/icons/MinusSquareOutlined\";\nimport PlusSquareOutlined from \"@ant-design/icons/es/icons/PlusSquareOutlined\";\nimport classNames from 'classnames';\nimport { cloneElement } from '../../_util/reactNode';\nconst SwitcherIconCom = props => {\n  const {\n    prefixCls,\n    switcherIcon,\n    treeNodeProps,\n    showLine\n  } = props;\n  const {\n    isLeaf,\n    expanded,\n    loading\n  } = treeNodeProps;\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: `${prefixCls}-switcher-loading-icon`\n    });\n  }\n  let showLeafIcon;\n  if (showLine && typeof showLine === 'object') {\n    showLeafIcon = showLine.showLeafIcon;\n  }\n  if (isLeaf) {\n    if (!showLine) {\n      return null;\n    }\n    if (typeof showLeafIcon !== 'boolean' && !!showLeafIcon) {\n      const leafIcon = typeof showLeafIcon === 'function' ? showLeafIcon(treeNodeProps) : showLeafIcon;\n      const leafCls = `${prefixCls}-switcher-line-custom-icon`;\n      if ( /*#__PURE__*/React.isValidElement(leafIcon)) {\n        return cloneElement(leafIcon, {\n          className: classNames(leafIcon.props.className || '', leafCls)\n        });\n      }\n      return leafIcon;\n    }\n    return showLeafIcon ? ( /*#__PURE__*/React.createElement(FileOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    })) : ( /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-switcher-leaf-line`\n    }));\n  }\n  const switcherCls = `${prefixCls}-switcher-icon`;\n  const switcher = typeof switcherIcon === 'function' ? switcherIcon(treeNodeProps) : switcherIcon;\n  if ( /*#__PURE__*/React.isValidElement(switcher)) {\n    return cloneElement(switcher, {\n      className: classNames(switcher.props.className || '', switcherCls)\n    });\n  }\n  if (switcher !== undefined) {\n    return switcher;\n  }\n  if (showLine) {\n    return expanded ? ( /*#__PURE__*/React.createElement(MinusSquareOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    })) : ( /*#__PURE__*/React.createElement(PlusSquareOutlined, {\n      className: `${prefixCls}-switcher-line-icon`\n    }));\n  }\n  return /*#__PURE__*/React.createElement(CaretDownFilled, {\n    className: switcherCls\n  });\n};\nexport default SwitcherIconCom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}