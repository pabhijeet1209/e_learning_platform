{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport React from 'react';\nconst BEAT_LIMIT = 1000 * 60 * 10;\n/**\n * A helper class to map keys to values.\n * It supports both primitive keys and object keys.\n */\nlet ArrayKeyMap = /*#__PURE__*/function () {\n  function ArrayKeyMap() {\n    _classCallCheck(this, ArrayKeyMap);\n    this.map = new Map();\n    // Use WeakMap to avoid memory leak\n    this.objectIDMap = new WeakMap();\n    this.nextID = 0;\n    this.lastAccessBeat = new Map();\n    // We will clean up the cache when reach the limit\n    this.accessBeat = 0;\n  }\n  return _createClass(ArrayKeyMap, [{\n    key: \"set\",\n    value: function set(keys, value) {\n      // New set will trigger clear\n      this.clear();\n      // Set logic\n      const compositeKey = this.getCompositeKey(keys);\n      this.map.set(compositeKey, value);\n      this.lastAccessBeat.set(compositeKey, Date.now());\n    }\n  }, {\n    key: \"get\",\n    value: function get(keys) {\n      const compositeKey = this.getCompositeKey(keys);\n      const cache = this.map.get(compositeKey);\n      this.lastAccessBeat.set(compositeKey, Date.now());\n      this.accessBeat += 1;\n      return cache;\n    }\n  }, {\n    key: \"getCompositeKey\",\n    value: function getCompositeKey(keys) {\n      const ids = keys.map(key => {\n        if (key && typeof key === 'object') {\n          return \"obj_\".concat(this.getObjectID(key));\n        }\n        return \"\".concat(typeof key, \"_\").concat(key);\n      });\n      return ids.join('|');\n    }\n  }, {\n    key: \"getObjectID\",\n    value: function getObjectID(obj) {\n      if (this.objectIDMap.has(obj)) {\n        return this.objectIDMap.get(obj);\n      }\n      const id = this.nextID;\n      this.objectIDMap.set(obj, id);\n      this.nextID += 1;\n      return id;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (this.accessBeat > 10000) {\n        const now = Date.now();\n        this.lastAccessBeat.forEach((beat, key) => {\n          if (now - beat > BEAT_LIMIT) {\n            this.map.delete(key);\n            this.lastAccessBeat.delete(key);\n          }\n        });\n        this.accessBeat = 0;\n      }\n    }\n  }]);\n}();\nconst uniqueMap = new ArrayKeyMap();\n/**\n * Like `useMemo`, but this hook result will be shared across all instances.\n */\nfunction useUniqueMemo(memoFn, deps) {\n  return React.useMemo(() => {\n    const cachedValue = uniqueMap.get(deps);\n    if (cachedValue) {\n      return cachedValue;\n    }\n    const newValue = memoFn();\n    uniqueMap.set(deps, newValue);\n    return newValue;\n  }, deps);\n}\nexport default useUniqueMemo;","map":{"version":3,"names":["_classCallCheck","_createClass","React","BEAT_LIMIT","ArrayKeyMap","map","Map","objectIDMap","WeakMap","nextID","lastAccessBeat","accessBeat","key","value","set","keys","clear","compositeKey","getCompositeKey","Date","now","get","cache","ids","concat","getObjectID","join","obj","has","id","forEach","beat","delete","uniqueMap","useUniqueMemo","memoFn","deps","useMemo","cachedValue","newValue"],"sources":["/home/abhijeet/WorkSpace/sis-web/node_modules/antd/es/_util/hooks/useUniqueMemo.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport React from 'react';\nconst BEAT_LIMIT = 1000 * 60 * 10;\n/**\n * A helper class to map keys to values.\n * It supports both primitive keys and object keys.\n */\nlet ArrayKeyMap = /*#__PURE__*/function () {\n  function ArrayKeyMap() {\n    _classCallCheck(this, ArrayKeyMap);\n    this.map = new Map();\n    // Use WeakMap to avoid memory leak\n    this.objectIDMap = new WeakMap();\n    this.nextID = 0;\n    this.lastAccessBeat = new Map();\n    // We will clean up the cache when reach the limit\n    this.accessBeat = 0;\n  }\n  return _createClass(ArrayKeyMap, [{\n    key: \"set\",\n    value: function set(keys, value) {\n      // New set will trigger clear\n      this.clear();\n      // Set logic\n      const compositeKey = this.getCompositeKey(keys);\n      this.map.set(compositeKey, value);\n      this.lastAccessBeat.set(compositeKey, Date.now());\n    }\n  }, {\n    key: \"get\",\n    value: function get(keys) {\n      const compositeKey = this.getCompositeKey(keys);\n      const cache = this.map.get(compositeKey);\n      this.lastAccessBeat.set(compositeKey, Date.now());\n      this.accessBeat += 1;\n      return cache;\n    }\n  }, {\n    key: \"getCompositeKey\",\n    value: function getCompositeKey(keys) {\n      const ids = keys.map(key => {\n        if (key && typeof key === 'object') {\n          return `obj_${this.getObjectID(key)}`;\n        }\n        return `${typeof key}_${key}`;\n      });\n      return ids.join('|');\n    }\n  }, {\n    key: \"getObjectID\",\n    value: function getObjectID(obj) {\n      if (this.objectIDMap.has(obj)) {\n        return this.objectIDMap.get(obj);\n      }\n      const id = this.nextID;\n      this.objectIDMap.set(obj, id);\n      this.nextID += 1;\n      return id;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (this.accessBeat > 10000) {\n        const now = Date.now();\n        this.lastAccessBeat.forEach((beat, key) => {\n          if (now - beat > BEAT_LIMIT) {\n            this.map.delete(key);\n            this.lastAccessBeat.delete(key);\n          }\n        });\n        this.accessBeat = 0;\n      }\n    }\n  }]);\n}();\nconst uniqueMap = new ArrayKeyMap();\n/**\n * Like `useMemo`, but this hook result will be shared across all instances.\n */\nfunction useUniqueMemo(memoFn, deps) {\n  return React.useMemo(() => {\n    const cachedValue = uniqueMap.get(deps);\n    if (cachedValue) {\n      return cachedValue;\n    }\n    const newValue = memoFn();\n    uniqueMap.set(deps, newValue);\n    return newValue;\n  }, deps);\n}\nexport default useUniqueMemo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}